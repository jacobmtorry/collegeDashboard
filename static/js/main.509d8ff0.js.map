{"version":3,"file":"static/js/main.509d8ff0.js","mappings":"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","sources":["components/Assignment.js","components/AssignmentForm.js","components/AssignmentList.js","components/GradeCalculator.js","components/Home.js","screens/Dashboard.js","screens/Landing.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nconst Assignment = (props) => {\r\n    const { color } = props\r\n\r\n    return (\r\n        <View style={styles.item}>\r\n            <View style={styles.itemLeft}>\r\n                <TouchableOpacity style={[styles.square, { borderColor: color, backgroundColor: props.completed ? color : '#ffffff' }]} onPress={props.onComplete} />\r\n                <Text style={styles.itemText}>{props.text}</Text>   \r\n            </View>\r\n            <View style={styles.itemRight}>\r\n                <TouchableOpacity style={styles.button} onPress={props.onEdit}>Edit</TouchableOpacity>\r\n                <TouchableOpacity style={styles.button} onPress={props.onDelete}>Delete</TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    item: {\r\n        backgroundColor: '#ffffff',\r\n        padding: 15,\r\n        borderRadius: 10,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        marginBottom: 20,\r\n        marginRight: 20\r\n    },\r\n    itemLeft: {\r\n        flexDirection: \"row\",\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap'\r\n    },\r\n    square: {\r\n        width: 24,\r\n        height: 24,\r\n        backgroundColor: '#FFFFFF',\r\n        borderWidth: 3,\r\n        borderColor: '#55BCF6',\r\n        borderRadius: 5,\r\n        marginRight: 15\r\n    },\r\n    squareCompleted: {\r\n        width: 24,\r\n        height: 24,\r\n        backgroundColor: '#55BCF6',\r\n        borderWidth: 3,\r\n        borderColor: '#55BCF6',\r\n        borderRadius: 5,\r\n        marginRight: 15\r\n    },\r\n    itemText: {\r\n        maxWidth: '100%',\r\n        color: 'black',\r\n        fontSize: 16,\r\n        fontWeight: '600'\r\n    }, \r\n    itemRight: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n    },\r\n    button: {\r\n        padding: 5\r\n    }\r\n})\r\n\r\nexport default Assignment","import React, { useEffect, useState } from \"react\";\r\nimport { View, Text, TextInput, StyleSheet, Modal, TouchableOpacity } from \"react-native\";\r\n\r\nconst AssignmentForm = ({ visible, onClose, onAdd, editItem }) => {\r\n  const [assignmentName, setAssignmentName] = useState('');\r\n  const [className, setClassName] = useState('');\r\n  const [dueDate, setDueDate] = useState('');\r\n  const [color, setColor] = useState('#000000');\r\n  const [colorPickerVisible, setColorPickerVisible] = useState(false);\r\n  const [numberOfAssignments, setNumberOfAssignments] = useState('1');\r\n\r\n  useEffect(() => {\r\n    if (editItem) {\r\n      setAssignmentName(editItem.assignmentName);\r\n      setClassName(editItem.className);\r\n      setDueDate(editItem.dueDate);\r\n      setColor(editItem.color);\r\n      setNumberOfAssignments('1'); // Set default value to 1 when editing\r\n    } else {\r\n      resetForm();\r\n    }\r\n  }, [editItem]);\r\n\r\n  const resetForm = () => {\r\n    setAssignmentName('');\r\n    setClassName('');\r\n    setDueDate('');\r\n    setColor('#000000');\r\n    setNumberOfAssignments('1'); // Set default value to 1\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    const assignments = [];\r\n    const numberOfAssignmentsToCreate = editItem ? 1 : parseInt(numberOfAssignments);\r\n    for (let i = 0; i < numberOfAssignmentsToCreate; i++) {\r\n      assignments.push({ assignmentName, className, dueDate, color });\r\n    }\r\n    onAdd(assignments);\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  const colors = [\r\n    { label: 'Black', value: '#000000' },\r\n    { label: 'Dark Brown', value: '#5c4033' },\r\n    { label: 'Deep Pink', value: '#ff1493' },\r\n    { label: 'Magenta', value: '#ff00ff' },\r\n    { label: 'Indigo', value: '#4b0082' },\r\n    { label: 'Navy', value: '#000080' },\r\n    { label: 'Dark Green', value: '#2f4f2f' },\r\n    { label: 'Gold', value: '#ffd700' },\r\n    { label: 'Dark Orange', value: '#ff8c00' },\r\n    { label: 'Dark Red', value: '#8b0000' },\r\n    { label: 'Gray', value: '#808080' },\r\n    { label: 'Brown', value: '#a52a2a' },\r\n    { label: 'Hot Pink', value: '#ff69b4' },\r\n    { label: 'Orchid', value: '#da70d6' },\r\n    { label: 'Purple', value: '#800080' },\r\n    { label: 'Blue', value: '#0000ff' },\r\n    { label: 'Green', value: '#008000' },\r\n    { label: 'Yellow', value: '#ffff00' },\r\n    { label: 'Orange', value: '#ffa500' },\r\n    { label: 'Red', value: '#ff0000' },\r\n    { label: 'Silver', value: '#c0c0c0' },\r\n    { label: 'Tan', value: '#d2b48c' },\r\n    { label: 'Pink', value: '#ffc0cb' },\r\n    { label: 'Violet', value: '#ee82ee' },\r\n    { label: 'Lavender', value: '#cc99cc' },\r\n    { label: 'Light Blue', value: '#add8e6' },\r\n    { label: 'Light Green', value: '#90ee90' },\r\n    { label: 'Light Yellow', value: '#ffffe0' },\r\n    { label: 'Peach', value: '#ff9955' },\r\n    { label: 'Bright Red', value: '#ff0033' },\r\n  ];\r\n\r\n  return (\r\n    <Modal\r\n      animationType=\"slide\"\r\n      transparent={true}\r\n      visible={visible}\r\n      onRequestClose={onClose}\r\n    >\r\n      <View style={styles.modalContainer}>\r\n        <View style={styles.modalContent}>\r\n          <Text style={styles.title}>{editItem ? 'Edit Assignment' : 'Create Assignment'}</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Assignment Name\"\r\n            value={assignmentName}\r\n            onChangeText={setAssignmentName}\r\n          />\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Class Name\"\r\n            value={className}\r\n            onChangeText={setClassName}\r\n          />\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Due Date\"\r\n            value={dueDate}\r\n            onChangeText={setDueDate}\r\n          />\r\n          <View style={styles.colorPickerContainer}>\r\n            <TouchableOpacity style={styles.colorButton} onPress={() => setColorPickerVisible(true)}>\r\n              <Text style={styles.colorButtonText}>Choose Color</Text>\r\n            </TouchableOpacity>\r\n            <View style={[styles.selectedColor, { backgroundColor: color }]} />\r\n          </View>\r\n          <View style={styles.buttonContainer}>\r\n            <TouchableOpacity onPress={handleAdd} style={styles.actionButton}>\r\n              <Text style={styles.buttonText}>{editItem ? 'Save Changes' : 'Add Assignment'}</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => { resetForm(); onClose(); }} style={styles.actionButton}>\r\n              <Text style={styles.buttonText}>Close</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={colorPickerVisible}\r\n        onRequestClose={() => setColorPickerVisible(false)}\r\n      >\r\n        <View style={styles.colorModalContainer}>\r\n          <View style={styles.colorModalContent}>\r\n            <Text style={styles.colorModalTitle}>Choose A Color</Text>\r\n            <View style={styles.colorOptions}>\r\n              {colors.map((item, index) => (\r\n                <View key={index} style={styles.colorOptionContainer}>\r\n                  <TouchableOpacity style={[styles.colorOption, { backgroundColor: item.value }]} onPress={() => { setColor(item.value); setColorPickerVisible(false) }} />\r\n                  <Text style={styles.colorLabel}>{item.label}</Text>\r\n                </View>\r\n              ))}\r\n            </View>\r\n            <TouchableOpacity onPress={() => setColorPickerVisible(false)} style={styles.closeButton}>\r\n              <Text style={styles.closeButtonText}>Close</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  modalContent: {\r\n    width: '80%',\r\n    padding: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    color: '#000000'\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: '#4b0082',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  colorPickerContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 20,\r\n  },\r\n  colorButton: {\r\n    padding: 10,\r\n    backgroundColor: '#CCB6F4',\r\n    borderRadius: 5,\r\n    marginRight: 10,\r\n  },\r\n  colorButtonText: {\r\n    color: '#4b0082',\r\n    fontSize: 16,\r\n    fontWeight: 'bold'\r\n  },\r\n  selectedColor: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 5,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n  colorPickerLabel: {\r\n    marginBottom: 10,\r\n    textAlign: 'center',\r\n  },\r\n  colorPicker: {\r\n    height: 200,\r\n    width: '100%',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 20,\r\n  },\r\n  buttonSpacing: {\r\n    width: 10,\r\n  },\r\n  actionButton: {\r\n    padding: 10,\r\n    backgroundColor: '#CCB6F4',\r\n    borderRadius: 5,\r\n    marginHorizontal: 10,\r\n    marginLeft: 0\r\n  },\r\n  buttonText: {\r\n    color: '#4b0082',\r\n    fontSize: 16,\r\n    fontWeight: 'bold'\r\n  },\r\n  colorModalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n  },\r\n  colorModalContent: {\r\n    width: '90%',\r\n    padding: 20,\r\n    backgroundColor: 'white',\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n  },\r\n  colorModalTitle: {\r\n    fontSize: 20,\r\n    marginBottom: 20,\r\n    textDecorationColor: 'black',\r\n  },\r\n  colorOptions: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  colorOptionContainer: {\r\n    alignItems: 'center',\r\n    margin: 10,\r\n  },\r\n  colorOption: {\r\n    width: 40,\r\n    height: 40,\r\n    margin: 10,\r\n    borderRadius: 20,\r\n  },\r\n  colorLabel: {\r\n    marginTop: 0,\r\n    textAlign: 'center',\r\n    fontSize: 12,\r\n  },\r\n  closeButton: {\r\n    marginTop: 20,\r\n    padding: 10,\r\n    backgroundColor: '#007bff',\r\n    borderRadius: 5,\r\n  },\r\n  closeButtonText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default AssignmentForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Alert, SectionList, Dimensions } from 'react-native';\r\nimport Assignment from './Assignment';\r\nimport AssignmentForm from './AssignmentForm';\r\nimport { Modal, Portal, Button, Provider as PaperProvider } from 'react-native-paper';\r\nimport * as Progress from 'react-native-progress';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst AssignmentList = ({ assignments, completedAssignments, onAddAssignment, onCompleteAssignment }) => {\r\n  const [taskItems, setTaskItems] = useState(assignments);\r\n  const [completedItems, setCompletedItems] = useState(completedAssignments);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [filterModalVisible, setFilterModalVisible] = useState(false);\r\n  const [sortBy, setSortBy] = useState('className');\r\n  const [editItem, setEditItem] = useState(null);\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    loadSortMethod();\r\n    updateProgress();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateProgress();\r\n    saveAssignmentsToStorage();\r\n  }, [taskItems, completedItems]);\r\n\r\n  const saveAssignmentsToStorage = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('assignments', JSON.stringify(taskItems));\r\n      await AsyncStorage.setItem('completedAssignments', JSON.stringify(completedItems));\r\n    } catch (error) {\r\n      console.error('Failed to save assignments.', error);\r\n    }\r\n  };\r\n\r\n  const handleAddAssignment = (newAssignments) => {\r\n    let updatedItems = taskItems;\r\n    newAssignments.forEach(assignment => {\r\n      if (editItem !== null) {\r\n        updatedItems[editItem] = assignment;\r\n        setEditItem(null);\r\n      } else {\r\n        updatedItems = [...updatedItems, assignment];\r\n      }\r\n    });\r\n    setTaskItems(updatedItems);\r\n    onAddAssignment(updatedItems, completedItems);\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const toggleAssignment = (index, listType) => {\r\n    if (listType === 'todo') {\r\n      let itemsCopy = [...taskItems];\r\n      let completedItem = itemsCopy.splice(index, 1)[0];\r\n      setTaskItems(itemsCopy);\r\n      setCompletedItems([...completedItems, completedItem]);\r\n      onAddAssignment(itemsCopy, [...completedItems, completedItem]);\r\n    } else if (listType === 'completed') {\r\n      let itemsCopy = [...completedItems];\r\n      let taskItem = itemsCopy.splice(index, 1)[0];\r\n      setCompletedItems(itemsCopy);\r\n      setTaskItems([...taskItems, taskItem]);\r\n      onAddAssignment([...taskItems, taskItem], itemsCopy);\r\n    }\r\n    updateProgress();\r\n  };\r\n\r\n  const deleteAssignment = (index, listType) => {\r\n    if (listType === 'todo') {\r\n      let itemsCopy = [...taskItems];\r\n      itemsCopy.splice(index, 1);\r\n      setTaskItems(itemsCopy);\r\n      onAddAssignment(itemsCopy, completedItems);\r\n    } else if (listType === 'completed') {\r\n      let itemsCopy = [...completedItems];\r\n      itemsCopy.splice(index, 1);\r\n      setCompletedItems(itemsCopy);\r\n      onAddAssignment(taskItems, itemsCopy);\r\n    }\r\n    updateProgress();\r\n  };\r\n\r\n  const editAssignment = (index) => {\r\n    setEditItem(index);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const loadSortMethod = async () => {\r\n    try {\r\n      const sortMethod = await AsyncStorage.getItem('sortBy');\r\n      if (sortMethod != null) {\r\n        setSortBy(sortMethod);\r\n      }\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Failed to load sorting method.');\r\n    }\r\n  };\r\n\r\n  const saveSortMethod = async (method) => {\r\n    try {\r\n      await AsyncStorage.setItem('sortBy', method);\r\n      setSortBy(method);\r\n      applySortMethod(method);\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Failed to save sorting method.');\r\n    }\r\n  };\r\n\r\n  const applySortMethod = (method) => {\r\n    const sortedTasks = sortAssignments([...taskItems], method);\r\n    const sortedCompletedTasks = sortAssignments([...completedItems], method);\r\n    setTaskItems(sortedTasks);\r\n    setCompletedItems(sortedCompletedTasks);\r\n  };\r\n\r\n  const sortAssignments = (items, method = sortBy) => {\r\n    return items.sort((a, b) => {\r\n      if (method === 'dueDate') {\r\n        return new Date(a.dueDate) - new Date(b.dueDate);\r\n      } else if (method === 'dueDateB') {\r\n        return new Date(b.dueDate) - new Date(a.dueDate);\r\n      } else if (method === 'classNameAtoZ') {\r\n        return (a.className || '').localeCompare(b.className || '');\r\n      } else if (method === 'classNameZtoA') {\r\n        return (b.className || '').localeCompare(a.className || '');\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  const updateProgress = () => {\r\n    const totalAssignments = taskItems.length + completedItems.length;\r\n    const completedCount = completedItems.length;\r\n    setProgress(totalAssignments === 0 ? 0 : completedCount / totalAssignments);\r\n  };\r\n\r\n  const renderAssignment = ({ item, index }) => (\r\n    <Assignment\r\n      key={index}\r\n      text={`${item.assignmentName} - ${item.className} (Due: ${item.dueDate})`}\r\n      color={item.color}\r\n      onComplete={() => toggleAssignment(index, 'todo')}\r\n      onDelete={() => deleteAssignment(index, 'todo')}\r\n      onEdit={() => editAssignment(index)}\r\n      completed={false}\r\n    />\r\n  );\r\n\r\n  const renderCompletedAssignment = ({ item, index }) => (\r\n    <Assignment\r\n      key={index}\r\n      text={`${item.assignmentName} - ${item.className} (Due: ${item.dueDate})`}\r\n      color={item.color}\r\n      onComplete={() => toggleAssignment(index, 'completed')}\r\n      onDelete={() => deleteAssignment(index, 'completed')}\r\n      onEdit={() => editAssignment(index)}\r\n      completed={true}\r\n    />\r\n  );\r\n\r\n  const sections = [\r\n    {\r\n      title: 'To-Do Assignments',\r\n      data: taskItems,\r\n      renderItem: renderAssignment\r\n    },\r\n    {\r\n      title: 'Completed Assignments',\r\n      data: completedItems,\r\n      renderItem: renderCompletedAssignment\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <PaperProvider>\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.mainTitle}>Assignment Checklist</Text>\r\n          <Button icon=\"filter\" mode=\"contained\" onPress={() => setFilterModalVisible(true)} style={styles.filterButton} buttonColor='#CCB6F4' labelStyle={styles.buttonText}>\r\n            Filter\r\n          </Button>\r\n          <Button icon=\"plus\" mode=\"contained\" onPress={() => setModalVisible(true)} style={styles.addButton} buttonColor='#CCB6F4' labelStyle={styles.buttonText}>\r\n            Add\r\n          </Button>\r\n        </View>\r\n        <View style={styles.progressBarContainer}>\r\n          <View style={styles.progressBar}>\r\n            <Progress.Bar progress={progress} width={null} color=\"#ffffff\" />\r\n          </View>\r\n          <Text style={styles.progressText}>{`${(progress * 100).toFixed(0)}%`}</Text>\r\n        </View>\r\n        {(taskItems.length === 0 && completedItems.length === 0) ? (\r\n          <Text style={styles.noAssignmentsText}>No Assignments</Text>\r\n        ) : (\r\n          <SectionList\r\n            sections={sections}\r\n            keyExtractor={(item, index) => item + index}\r\n            renderItem={({ section, item, index }) => section.renderItem({ item, index })}\r\n            renderSectionHeader={({ section: { title } }) => (\r\n              <Text style={styles.title}>{title}</Text>\r\n            )}\r\n          />\r\n        )}\r\n        <AssignmentForm\r\n          visible={modalVisible}\r\n          onClose={() => {\r\n            setModalVisible(false);\r\n            setEditItem(null);\r\n          }}\r\n          onAdd={handleAddAssignment}\r\n          editItem={editItem !== null ? taskItems[editItem] : null}\r\n        />\r\n        <Portal>\r\n          <Modal visible={filterModalVisible} onDismiss={() => setFilterModalVisible(false)} contentContainerStyle={styles.modalContainer}>\r\n            <Text style={styles.modalTitle}>Sort Assignments By</Text>\r\n            <Button onPress={() => { saveSortMethod('dueDate'); setFilterModalVisible(false); }} textColor='#4b0082'>Due Date (Closest to Furthest)</Button>\r\n            <Button onPress={() => { saveSortMethod('dueDateB'); setFilterModalVisible(false); }} textColor='#4b0082'>Due Date (Furthest to Closest)</Button>\r\n            <Button onPress={() => { saveSortMethod('classNameAtoZ'); setFilterModalVisible(false); }} textColor='#4b0082'>Class Name (A to Z)</Button>\r\n            <Button onPress={() => { saveSortMethod('classNameZtoA'); setFilterModalVisible(false); }} textColor='#4b0082'>Class Name (Z to A)</Button>\r\n            <Button onPress={() => setFilterModalVisible(false)} textColor='#4b0082' buttonColor='#CCB6F4'>Close</Button>\r\n          </Modal>\r\n        </Portal>\r\n      </View>\r\n    </PaperProvider>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20\r\n  },\r\n  mainTitle: {\r\n    fontSize: screenWidth > 400 ? 24 : 16,\r\n    flex: 1,\r\n    color: '#ffffff',\r\n  },\r\n  title: {\r\n    color: '#ffffff',\r\n    marginBottom: 10,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 15,\r\n  },\r\n  progressBarContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 20\r\n  },\r\n  progressBar: {\r\n    flex: 1,\r\n    marginRight: 10,\r\n  },\r\n  progressText: {\r\n    marginLeft: 10,\r\n    fontSize: 16,\r\n    marginRight: 10,\r\n    color: 'white',\r\n  },\r\n  filterButton: {\r\n    marginLeft: 10\r\n  },\r\n  addButton: {\r\n    marginLeft: 10,\r\n  },\r\n  noAssignmentsText: {\r\n    textAlign: 'center',\r\n    color: '#888',\r\n    marginTop: 10,\r\n  },\r\n  modalContainer: {\r\n    backgroundColor: 'white',\r\n    padding: 20,\r\n    margin: 20,\r\n    borderRadius: 10,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 18,\r\n    marginBottom: 10,\r\n  },\r\n  buttonText: {\r\n    color: '#4b0082'\r\n  }\r\n});\r\n\r\nexport default AssignmentList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Button, Modal, TextInput, TouchableOpacity, FlatList, Picker } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nconst GradeCalculator = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [className, setClassName] = useState('');\r\n  const [classes, setClasses] = useState([]);\r\n  const [selectedClass, setSelectedClass] = useState(null);\r\n  const [assignmentModalVisible, setAssignmentModalVisible] = useState(false);\r\n  const [assignmentName, setAssignmentName] = useState('');\r\n  const [grade, setGrade] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [categoryModalVisible, setCategoryModalVisible] = useState(false);\r\n  const [newCategoryName, setNewCategoryName] = useState('');\r\n  const [newCategoryWeight, setNewCategoryWeight] = useState('');\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editAssignmentMode, setEditAssignmentMode] = useState(false);\r\n  const [editCategoryMode, setEditCategoryMode] = useState(false);\r\n  const [assignmentToEdit, setAssignmentToEdit] = useState(null);\r\n  const [categoryToEdit, setCategoryToEdit] = useState(null);\r\n  const [screen, setScreen] = useState('classList');\r\n  const [calculatedGrades, setCalculatedGrades] = useState({});\r\n\r\n  useEffect(() => {\r\n    loadClasses();\r\n  }, []);\r\n\r\n  const saveClasses = async (updatedClasses) => {\r\n    try {\r\n      await AsyncStorage.setItem('classes', JSON.stringify(updatedClasses));\r\n    } catch (e) {\r\n      console.error('Failed to save classes.', e);\r\n    }\r\n  };\r\n\r\n  const loadClasses = async () => {\r\n    try {\r\n      const classesString = await AsyncStorage.getItem('classes');\r\n      if (classesString) {\r\n        setClasses(JSON.parse(classesString));\r\n      }\r\n    } catch (e) {\r\n      console.error('Failed to load classes.', e);\r\n    }\r\n  };\r\n\r\n  const saveClassData = async (className, data) => {\r\n    try {\r\n      await AsyncStorage.setItem(`classData_${className}`, JSON.stringify(data));\r\n    } catch (e) {\r\n      console.error('Failed to save class data.', e);\r\n    }\r\n  };\r\n\r\n  const loadClassData = async (className) => {\r\n    try {\r\n      const classDataString = await AsyncStorage.getItem(`classData_${className}`);\r\n      if (classDataString) {\r\n        const classData = JSON.parse(classDataString);\r\n        setSelectedClass({ className, ...classData });\r\n        calculateGrades(classData);\r\n        return classData;\r\n      } else {\r\n        return {\r\n          categories: [],\r\n          assignments: [],\r\n        };\r\n      }\r\n    } catch (e) {\r\n      console.error('Failed to load class data.', e);\r\n      return {\r\n        categories: [],\r\n        assignments: [],\r\n      };\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n    setClassName('');\r\n    setEditMode(false);\r\n    setSelectedClass(null);\r\n  };\r\n\r\n  const handleAddClass = () => {\r\n    if (className) {\r\n      const newClasses = [...classes, { className }];\r\n      setClasses(newClasses);\r\n      saveClasses(newClasses);\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const handleEditClass = () => {\r\n    if (className && selectedClass) {\r\n      const updatedClasses = classes.map((classInfo) => {\r\n        if (classInfo.className === selectedClass.className) {\r\n          return { ...classInfo, className };\r\n        }\r\n        return classInfo;\r\n      });\r\n      setClasses(updatedClasses);\r\n      saveClasses(updatedClasses);\r\n\r\n      // Update selectedClass with new className to reflect the changes in the assignment list\r\n      setSelectedClass({ ...selectedClass, className });\r\n\r\n      // Also update the stored data for the class if any\r\n      const updatedClassData = { ...selectedClass, className };\r\n      saveClassData(selectedClass.className, updatedClassData);\r\n\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  const handleDeleteClass = (classNameToDelete) => {\r\n    const newClasses = classes.filter((classInfo) => classInfo.className !== classNameToDelete);\r\n    setClasses(newClasses);\r\n    saveClasses(newClasses);\r\n    AsyncStorage.removeItem(`classData_${classNameToDelete}`);\r\n  };\r\n\r\n  const handleClassClick = async (classInfo) => {\r\n    const classData = await loadClassData(classInfo.className);\r\n    setSelectedClass({ ...classInfo, ...classData });\r\n    calculateGrades(classData);\r\n    setScreen('assignmentList');\r\n  };\r\n\r\n  const handleAddAssignment = () => {\r\n    if (assignmentName && grade && category) {\r\n      const newAssignments = [...selectedClass.assignments, { assignmentName, grade: parseFloat(grade), category }];\r\n      const updatedClass = { ...selectedClass, assignments: newAssignments };\r\n      setSelectedClass(updatedClass);\r\n      saveClassData(selectedClass.className, updatedClass);\r\n      setAssignmentName('');\r\n      setGrade('');\r\n      setCategory('');\r\n      setAssignmentModalVisible(false);\r\n      calculateGrades(updatedClass);\r\n    }\r\n  };\r\n\r\n  const handleEditAssignment = () => {\r\n    if (assignmentToEdit) {\r\n      const updatedAssignments = selectedClass.assignments.map((assignment) => {\r\n        if (assignment.assignmentName === assignmentToEdit.assignmentName) {\r\n          return { assignmentName, grade: parseFloat(grade), category };\r\n        }\r\n        return assignment;\r\n      });\r\n      const updatedClass = { ...selectedClass, assignments: updatedAssignments };\r\n      setSelectedClass(updatedClass);\r\n      saveClassData(selectedClass.className, updatedClass);\r\n      setAssignmentModalVisible(false);\r\n      setEditAssignmentMode(false);\r\n      setAssignmentToEdit(null);\r\n      setAssignmentName('');\r\n      setGrade('');\r\n      setCategory('');\r\n      calculateGrades(updatedClass);\r\n    }\r\n  };\r\n\r\n  const handleDeleteAssignment = (assignmentToDelete) => {\r\n    const updatedAssignments = selectedClass.assignments.filter((assignment) => assignment.assignmentName !== assignmentToDelete.assignmentName);\r\n    const updatedClass = { ...selectedClass, assignments: updatedAssignments };\r\n    setSelectedClass(updatedClass);\r\n    saveClassData(selectedClass.className, updatedClass);\r\n    calculateGrades(updatedClass);\r\n  };\r\n\r\n  const handleAddCategory = () => {\r\n    if (newCategoryName && newCategoryWeight) {\r\n      const updatedCategories = [...selectedClass.categories, { name: newCategoryName, weight: parseFloat(newCategoryWeight) }];\r\n      const updatedClass = { ...selectedClass, categories: updatedCategories };\r\n      setSelectedClass(updatedClass);\r\n      saveClassData(selectedClass.className, updatedClass);\r\n      setNewCategoryName('');\r\n      setNewCategoryWeight('');\r\n      setCategoryModalVisible(false);\r\n      if (updatedCategories.length === 1) {\r\n        setCategory(updatedCategories[0].name);\r\n      }\r\n      calculateGrades(updatedClass);\r\n    }\r\n  };\r\n\r\n  const handleEditCategory = () => {\r\n    if (categoryToEdit) {\r\n      const updatedCategories = selectedClass.categories.map((cat) => {\r\n        if (cat.name === categoryToEdit.name) {\r\n          return { name: newCategoryName, weight: parseFloat(newCategoryWeight) };\r\n        }\r\n        return cat;\r\n      });\r\n      const updatedClass = { ...selectedClass, categories: updatedCategories };\r\n      setSelectedClass(updatedClass);\r\n      saveClassData(selectedClass.className, updatedClass);\r\n      setEditCategoryMode(false);\r\n      setCategoryToEdit(null);\r\n      setCategoryModalVisible(false);\r\n      calculateGrades(updatedClass);\r\n    }\r\n  };\r\n\r\n  const handleDeleteCategory = (categoryToDelete) => {\r\n    const updatedCategories = selectedClass.categories.filter((cat) => cat.name !== categoryToDelete.name);\r\n    const updatedClass = { ...selectedClass, categories: updatedCategories };\r\n    setSelectedClass(updatedClass);\r\n    saveClassData(updatedClass.className, updatedClass);\r\n    calculateGrades(updatedClass);\r\n  };\r\n\r\n  const handleBackToClassList = () => {\r\n    setScreen('classList');\r\n    setSelectedClass(null);\r\n  };\r\n\r\n  const openEditAssignmentModal = (assignment) => {\r\n    setAssignmentToEdit(assignment);\r\n    setAssignmentName(assignment.assignmentName);\r\n    setGrade(assignment.grade.toString());\r\n    setCategory(assignment.category);\r\n    setEditAssignmentMode(true);\r\n    setAssignmentModalVisible(true);\r\n  };\r\n\r\n  const openEditCategoryModal = (category) => {\r\n    setCategoryToEdit(category);\r\n    setNewCategoryName(category.name);\r\n    setNewCategoryWeight(category.weight.toString());\r\n    setEditCategoryMode(true);\r\n    setCategoryModalVisible(true);\r\n  };\r\n\r\n  const calculateGrades = (currentClass) => {\r\n    if (currentClass && currentClass.categories) {\r\n      const grades = currentClass.categories.map((cat) => {\r\n        const categoryAssignments = currentClass.assignments.filter((assignment) => assignment.category === cat.name);\r\n        const totalGrades = categoryAssignments.reduce((total, assignment) => total + assignment.grade, 0);\r\n        const averageGrade = categoryAssignments.length ? totalGrades / categoryAssignments.length : 0;\r\n        return {\r\n          category: cat.name,\r\n          grade: (averageGrade * (cat.weight / 100)).toFixed(2),\r\n        };\r\n      });\r\n\r\n      const finalGrade = grades.reduce((total, item) => total + parseFloat(item.grade), 0).toFixed(2);\r\n\r\n      setCalculatedGrades({ grades, finalGrade });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {screen === 'classList' ? (\r\n        <>\r\n          <Text style={styles.title}>Classes</Text>\r\n          <FlatList\r\n            data={classes}\r\n            keyExtractor={(item) => item.className}\r\n            renderItem={({ item }) => (\r\n              <View style={styles.classContainer}>\r\n                <TouchableOpacity style={styles.classButton} onPress={() => handleClassClick(item)}>\r\n                  <Text style={styles.classButtonText}>{item.className}</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.editButton} onPress={() => { setEditMode(true); setSelectedClass(item); setClassName(item.className); openModal(); }}>\r\n                  <MaterialIcons name=\"edit\" size={24} color=\"#CCB6F4\" />\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.deleteButton} onPress={() => handleDeleteClass(item.className)}>\r\n                  <MaterialIcons name=\"delete\" size={24} color=\"#CCB6F4\" />\r\n                </TouchableOpacity>\r\n              </View>\r\n            )}\r\n          />\r\n          <TouchableOpacity style={styles.addClassButton} onPress={openModal}>\r\n            <Text style={styles.addClassButtonText}>Add Class</Text>\r\n          </TouchableOpacity>\r\n        </>\r\n      ) : (\r\n        <View style={styles.contentContainer}>\r\n          <View style={styles.leftPane}>\r\n            <TouchableOpacity onPress={handleBackToClassList}>\r\n              <Text style={styles.backButton}>&larr; Back to Classes</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.titleContainer}>\r\n              <Text style={styles.title}>Assignments for {selectedClass.className}</Text>\r\n              <TouchableOpacity style={styles.addButton} onPress={() => setAssignmentModalVisible(true)}>\r\n                <Text style={styles.addButtonText}>+ Add</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <FlatList\r\n              data={selectedClass.assignments}\r\n              keyExtractor={(item, index) => index.toString()}\r\n              renderItem={({ item }) => (\r\n                <View style={styles.assignmentContainer}>\r\n                  <View style={styles.assignmentTextContainer}>\r\n                    <Text style={styles.assignmentText}>{item.assignmentName}: {item.grade}%</Text>\r\n                    <Text style={styles.assignmentCategory}>{item.category}</Text>\r\n                  </View>\r\n                  <TouchableOpacity style={styles.editButton} onPress={() => openEditAssignmentModal(item)}>\r\n                    <Text style={styles.editButtonText}>Edit</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity style={styles.deleteButton} onPress={() => handleDeleteAssignment(item)}>\r\n                    <Text style={styles.deleteButtonText}>Delete</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            />\r\n          </View>\r\n          <View style={styles.rightPane}>\r\n            <View style={styles.gradeCalculationContainer}>\r\n              <View style={styles.titleContainer}>\r\n                <Text style={styles.tableTitle}>Calculated Grades</Text>\r\n                <TouchableOpacity style={styles.addButton} onPress={() => setCategoryModalVisible(true)}>\r\n                  <Text style={styles.addButtonText}>Edit Table</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n              {calculatedGrades.grades && (\r\n                <View style={styles.gradeTableContainer}>\r\n                  <View style={styles.gradeTable}>\r\n                    {calculatedGrades.grades.map((grade, index) => (\r\n                      <View style={styles.tableRow} key={index}>\r\n                        <Text style={styles.tableCell}>{grade.category}:</Text>\r\n                        <Text style={styles.gradeText}>{grade.grade}%</Text>\r\n                      </View>\r\n                    ))}\r\n                    <View style={[styles.tableRow, styles.finalGradeRow]}>\r\n                      <Text style={styles.tableCell}>Final Grade:</Text>\r\n                      <Text style={styles.finalGradeText}>{calculatedGrades.finalGrade}%</Text>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </View>\r\n      )}\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={closeModal}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalTitle}>{editMode ? 'Edit Class' : 'Add Class'}</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Class Name\"\r\n              placeholderTextColor=\"#aaa\"\r\n              value={className}\r\n              onChangeText={setClassName}\r\n            />\r\n            <View style={styles.buttonContainer}>\r\n              <TouchableOpacity style={styles.button} onPress={editMode ? handleEditClass : handleAddClass}>\r\n                <Text style={styles.buttonText}>{editMode ? 'Save Changes' : 'Add'}</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={styles.button} onPress={closeModal}>\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={assignmentModalVisible}\r\n        onRequestClose={() => setAssignmentModalVisible(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalTitle}>{editAssignmentMode ? 'Edit Assignment' : 'Add Assignment'}</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Assignment Name\"\r\n              placeholderTextColor=\"#aaa\"\r\n              value={assignmentName}\r\n              onChangeText={setAssignmentName}\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Grade\"\r\n              placeholderTextColor=\"#aaa\"\r\n              value={grade}\r\n              onChangeText={setGrade}\r\n              keyboardType=\"numeric\"\r\n            />\r\n            <View style={styles.pickerContainer}>\r\n              <Picker\r\n                selectedValue={category}\r\n                style={styles.picker}\r\n                onValueChange={(itemValue) => setCategory(itemValue)}\r\n              >\r\n                <Picker.Item label=\"Choose weight category\" value=\"\" />\r\n                {selectedClass?.categories?.map((cat, index) => (\r\n                  <Picker.Item key={index} label={`${cat.name} (${cat.weight}%)`} value={cat.name} />\r\n                ))}\r\n              </Picker>\r\n            </View>\r\n            <View style={styles.buttonContainer}>\r\n              <TouchableOpacity style={styles.button} onPress={editAssignmentMode ? handleEditAssignment : handleAddAssignment}>\r\n                <Text style={styles.buttonText}>{editAssignmentMode ? 'Save Changes' : 'Add'}</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={styles.button} onPress={() => setAssignmentModalVisible(false)}>\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={categoryModalVisible}\r\n        onRequestClose={() => setCategoryModalVisible(false)}\r\n      >\r\n        <View style={styles.modalContainer}>\r\n          <View style={styles.modalView}>\r\n            <Text style={styles.modalTitle}>{editCategoryMode ? 'Edit Category' : 'Add Category'}</Text>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Category Name\"\r\n              placeholderTextColor=\"#aaa\"\r\n              value={newCategoryName}\r\n              onChangeText={setNewCategoryName}\r\n            />\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Category Weight (%)\"\r\n              placeholderTextColor=\"#aaa\"\r\n              value={newCategoryWeight}\r\n              onChangeText={setNewCategoryWeight}\r\n              keyboardType=\"numeric\"\r\n            />\r\n            <View style={styles.buttonContainer}>\r\n              <TouchableOpacity style={styles.button} onPress={editCategoryMode ? handleEditCategory : handleAddCategory}>\r\n                <Text style={styles.buttonText}>{editCategoryMode ? 'Save Changes' : 'Add'}</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={styles.button} onPress={() => setCategoryModalVisible(false)}>\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            {/* List of categories for editing and deleting */}\r\n            <Text style={styles.currentCategories}>Current Categories</Text>\r\n            <FlatList\r\n              data={selectedClass?.categories || []}\r\n              keyExtractor={(item) => item.name}\r\n              renderItem={({ item }) => (\r\n                <View style={styles.categoryItemContainer}>\r\n                  <View style={styles.categoryTextContainer}>\r\n                    <Text style={styles.categoryText}>{item.name}: {item.weight}%</Text>\r\n                  </View>\r\n                  <TouchableOpacity style={styles.editButton} onPress={() => openEditCategoryModal(item)}>\r\n                    <Text style={styles.editButtonText2}>Edit</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity style={styles.deleteButton} onPress={() => handleDeleteCategory(item)}>\r\n                    <Text style={styles.deleteButtonText2}>Delete</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              )}\r\n            />\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: 'black',\r\n  },\r\n  contentContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  leftPane: {\r\n    flex: 1,\r\n    paddingRight: 10\r\n  },\r\n  rightPane: {\r\n    flex: 1,\r\n    paddingLeft: 10,\r\n    justifyContent: 'space-between',\r\n    paddingTop: 65\r\n  },\r\n  categoryContainer: {\r\n    flex: 1,\r\n    marginBottom: 20,\r\n  },\r\n  gradeCalculationContainer: {\r\n    flex: 1,\r\n  },\r\n  titleContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 10,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    color: 'white',\r\n    marginBottom: 10\r\n  },\r\n  title2: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  classContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 10,\r\n  },\r\n  classButton: {\r\n    backgroundColor: 'white',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    flex: 1,\r\n  },\r\n  classButtonText: {\r\n    fontSize: 16,\r\n    color: 'black',\r\n    fontWeight: 'bold'\r\n  },\r\n  addButton: {\r\n    backgroundColor: '#CCB6F4',   //light purple\r\n    padding: 8,\r\n    borderRadius: 5,\r\n  },\r\n  addButtonText: {\r\n    color: '#4b0082',   //Dark purple\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n  },\r\n  editButton: {\r\n    marginLeft: 5,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n  },\r\n  editButtonText: {\r\n    color: 'white',\r\n  },\r\n  editButtonText2: {\r\n    color: 'black',\r\n  },\r\n  deleteButton: {\r\n    marginLeft: 5,\r\n    padding: 5,\r\n    borderRadius: 5,\r\n  },\r\n  deleteButtonText: {\r\n    color: 'white'\r\n  },\r\n  deleteButtonText2: {\r\n    color: 'black'\r\n  },\r\n  addClassButton: {\r\n    backgroundColor: '#CCB6F4',\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    justifyContent: 'center',\r\n    borderBottomColor: '#4B0082',\r\n    borderBottomWidth: 4\r\n  },\r\n  addClassButtonText:{\r\n    color: '#4B0082',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    textAlign: 'center'\r\n  },\r\n  backButton: {\r\n    fontSize: 16,\r\n    color: '#CCB6F4',\r\n    marginBottom: 40,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderColor: '#555',\r\n    borderWidth: 1,\r\n    borderRadius: 5,\r\n    marginBottom: 15,\r\n    paddingLeft: 10,\r\n    color: 'black',\r\n  },\r\n  pickerContainer: {\r\n    width: '100%',\r\n    borderColor: 'black',\r\n    borderWidth: 0.25,\r\n    borderRadius: 5,\r\n    marginBottom: 15,\r\n    overflow: 'hidden',\r\n  },\r\n  picker: {\r\n    height: 40,\r\n    color: 'black',\r\n    backgroundColor: 'white',\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    backgroundColor: '#CCB6F4',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    margin: 5,\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    borderBottomWidth: 3,\r\n    borderBottomColor: \"#4B0082\"\r\n  },\r\n  buttonText: {\r\n    color: '#4B0082',\r\n    fontWeight: 'bold',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n  },\r\n  modalView: {\r\n    width: '80%',\r\n    backgroundColor: 'white',\r\n    borderRadius: 20,\r\n    padding: 20,\r\n    alignItems: 'center',\r\n    shadowColor: '#000',\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 4,\r\n    elevation: 5,\r\n  },\r\n  modalTitle: {\r\n    marginBottom: 15,\r\n    textAlign: 'center',\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n  },\r\n  assignmentContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  assignmentTextContainer: {\r\n    flex: 1, \r\n  },\r\n  assignmentText: {\r\n    fontSize: 16,\r\n    color: 'white',\r\n  },\r\n  assignmentCategory: {\r\n    fontSize: 14,\r\n    color: '#aaa',\r\n  },\r\n  gradeTableContainer: {\r\n    marginTop: 10,\r\n  },\r\n  tableTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n    marginBottom: 10,\r\n  },\r\n  gradeTable: {\r\n    backgroundColor: 'white',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n  },\r\n  gradeText: {\r\n    color: 'black'\r\n  },\r\n  tableRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 5,\r\n  },\r\n  tableCell: {\r\n    fontSize: 16,\r\n    color: 'black',\r\n  },\r\n  finalGradeRow: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: 'black',\r\n    paddingTop: 5,\r\n    marginTop: 5,\r\n  },\r\n  finalGradeText: {\r\n    fontSize: 18,\r\n    color: 'black',\r\n    fontWeight: 'bold',\r\n  },\r\n  categoryText: {\r\n    color: 'black',\r\n    marginRight: 40\r\n  },\r\n  currentCategories: {\r\n    color: \"black\",\r\n    marginTop: 15\r\n  },\r\n  categoryItemContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 5,\r\n  },\r\n  categoryTextContainer: {\r\n    flex: 1,\r\n  }\r\n});\r\n\r\nexport default GradeCalculator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst Home = () => {\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [classesWithGrades, setClassesWithGrades] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadAssignments = async () => {\r\n      try {\r\n        const storedAssignments = JSON.parse(await AsyncStorage.getItem('assignments')) || [];\r\n        setAssignments(storedAssignments);\r\n      } catch (error) {\r\n        console.error('Failed to load assignments.', error);\r\n      }\r\n    };\r\n\r\n    const loadClasses = async () => {\r\n      const loadedClasses = await loadClassesWithGrades();\r\n      setClassesWithGrades(loadedClasses);\r\n    };\r\n\r\n    loadAssignments();\r\n    loadClasses();\r\n  }, []);\r\n\r\n  const loadClassesWithGrades = async () => {\r\n    try {\r\n      const classesString = await AsyncStorage.getItem('classes');\r\n      const classes = classesString ? JSON.parse(classesString) : [];\r\n\r\n      const classesWithGrades = [];\r\n      for (const classInfo of classes) {\r\n        const classDataString = await AsyncStorage.getItem(`classData_${classInfo.className}`);\r\n        if (classDataString) {\r\n          const classData = JSON.parse(classDataString);\r\n          let finalGrade = 0;\r\n          classData.categories.forEach(category => {\r\n            const assignmentsInCategory = classData.assignments.filter(a => a.category === category.name);\r\n            const averageGrade = assignmentsInCategory.reduce((acc, a) => acc + a.grade, 0) / assignmentsInCategory.length;\r\n            finalGrade += (averageGrade * category.weight) / 100;\r\n          });\r\n          classesWithGrades.push({ ...classInfo, finalGrade: finalGrade.toFixed(2) });\r\n        }\r\n      }\r\n      return classesWithGrades;\r\n    } catch (error) {\r\n      console.error('Failed to load classes or calculate grades.', error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const getAssignmentsDueIn7Days = (assignments) => {\r\n    const today = new Date();\r\n    const nextWeek = new Date();\r\n    nextWeek.setDate(today.getDate() + 7);\r\n\r\n    return assignments.filter(assignment => {\r\n      const dueDate = new Date(assignment.dueDate);\r\n      return dueDate >= today && dueDate <= nextWeek;\r\n    });\r\n  };\r\n\r\n  const assignmentsDueIn7Days = getAssignmentsDueIn7Days(assignments);\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.container}>\r\n      <View style={styles.pane}>\r\n        <View style={styles.leftPane}>\r\n          <Text style={styles.headerText}>7 Day Preview</Text>\r\n          {assignmentsDueIn7Days.length === 0 ? (\r\n            <Text style={styles.noAssignmentsText}>No assignments due within the next 7 days</Text>\r\n          ) : (\r\n            assignmentsDueIn7Days.map((assignment, index) => (\r\n              <View key={index} style={styles.assignment}>\r\n                <Text style={styles.assignmentText}>\r\n                  {assignment.assignmentName} - {assignment.className} (Due: {assignment.dueDate})\r\n                </Text>\r\n              </View>\r\n            ))\r\n          )}\r\n        </View>\r\n\r\n        <View style={styles.rightPane}>\r\n          <Text style={styles.headerText}>Current Classes and Grades</Text>\r\n          {classesWithGrades.length === 0 ? (\r\n            <Text style={styles.noAssignmentsText}>No classes available</Text>\r\n          ) : (\r\n            classesWithGrades.map((classInfo, index) => (\r\n              <View key={index} style={styles.class}>\r\n                <Text style={styles.classText}>\r\n                  {classInfo.className}: {classInfo.finalGrade}%\r\n                </Text>\r\n              </View>\r\n            ))\r\n          )}\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  pane: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    width: '100%',\r\n  },\r\n  leftPane: {\r\n    width: '48%',\r\n    marginRight: '2%',\r\n  },\r\n  rightPane: {\r\n    width: '48%',\r\n    marginLeft: '2%',\r\n  },\r\n  headerText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    color: '#ffffff',\r\n    textAlign: 'center',\r\n  },\r\n  assignment: {\r\n    backgroundColor: 'white',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n  },\r\n  assignmentText: {\r\n    fontSize: 18,\r\n    color: 'black',\r\n  },\r\n  noAssignmentsText: {\r\n    fontSize: 16,\r\n    color: '#888',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n  class: {\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    alignItems: 'center'\r\n  },\r\n  classText: {\r\n    fontSize: 18,\r\n    color: 'white',\r\n  },\r\n});\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet, SafeAreaView } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport AssignmentList from '../components/AssignmentList';\r\nimport GradeCalculator from '../components/GradeCalculator';\r\nimport Home from '../components/Home';\r\n\r\nconst Dashboard = ({ semesterId, semesterName, onBack }) => {\r\n  const [activeTab, setActiveTab] = useState('Home');\r\n  const [assignments, setAssignments] = useState([]);\r\n  const [completedAssignments, setCompletedAssignments] = useState([]);\r\n  const [sidebarVisible, setSidebarVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadAssignments();\r\n  }, [semesterId]);\r\n\r\n  useEffect(() => {\r\n    saveAssignments();\r\n  }, [assignments, completedAssignments]);\r\n\r\n  const loadAssignments = async () => {\r\n    try {\r\n      const taskItems = await AsyncStorage.getItem(`assignments_${semesterId}`);\r\n      const completedItems = await AsyncStorage.getItem(`completedAssignments_${semesterId}`);\r\n      if (taskItems != null) {\r\n        setAssignments(JSON.parse(taskItems));\r\n      } else {\r\n        setAssignments([]);\r\n      }\r\n      if (completedItems != null) {\r\n        setCompletedAssignments(JSON.parse(completedItems));\r\n      } else {\r\n        setCompletedAssignments([]);\r\n      }\r\n    } catch (e) {\r\n      console.error('Failed to load assignments.', e);\r\n    }\r\n  };\r\n\r\n  const saveAssignments = async () => {\r\n    try {\r\n      const taskItems = JSON.stringify(assignments);\r\n      const completedItems = JSON.stringify(completedAssignments);\r\n      await AsyncStorage.setItem(`assignments_${semesterId}`, taskItems);\r\n      await AsyncStorage.setItem(`completedAssignments_${semesterId}`, completedItems);\r\n    } catch (e) {\r\n      console.error('Failed to save assignments.', e);\r\n    }\r\n  };\r\n\r\n  const handleAddAssignment = (newAssignments, newCompletedAssignments) => {\r\n    setAssignments(newAssignments);\r\n    setCompletedAssignments(newCompletedAssignments);\r\n  };\r\n\r\n  const renderContent = () => {\r\n    switch (activeTab) {\r\n      case 'Assignments':\r\n        return (\r\n          <AssignmentList\r\n            assignments={assignments}\r\n            completedAssignments={completedAssignments}\r\n            onAddAssignment={handleAddAssignment}\r\n            semesterName={semesterName}\r\n            onBack={onBack}\r\n          />\r\n        );\r\n      case 'GradeCalculator':\r\n        return <GradeCalculator />;\r\n      case 'Timer':\r\n        return <StudyTimer />;\r\n      case 'Home':\r\n      default:\r\n        return <Home />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.safeArea}>\r\n      <View style={styles.container}>\r\n        <View style={styles.topBar}>\r\n          <View style={styles.semesterNameContainer}>\r\n            <Text style={styles.semesterName}>{semesterName}</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.mainContent}>\r\n          {sidebarVisible ? (\r\n            <View style={styles.sidebar}>\r\n              <View style={styles.sidebarContent}>\r\n                <TouchableOpacity style={styles.tab} onPress={() => setActiveTab('Home')}>\r\n                  <Text style={[styles.tabText, activeTab === 'Home' && styles.activeTabText]}>Home</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.tab} onPress={() => setActiveTab('Assignments')}>\r\n                  <Text style={[styles.tabText, activeTab === 'Assignments' && styles.activeTabText]}>Assignments</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.tab} onPress={() => setActiveTab('GradeCalculator')}>\r\n                  <Text style={[styles.tabText, activeTab === 'GradeCalculator' && styles.activeTabText]}>Grade Calculator</Text>\r\n                </TouchableOpacity>\r\n                <View style={styles.backButtonContainer}>\r\n                  <TouchableOpacity onPress={onBack}>\r\n                    <Text style={styles.backButton}>&larr; Back</Text> \r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n              <TouchableOpacity style={styles.collapseButton} onPress={() => setSidebarVisible(false)}>\r\n                <MaterialIcons name=\"chevron-left\" size={30} color=\"#CCB6F4\" />\r\n              </TouchableOpacity>\r\n            </View>\r\n          ) : (\r\n            <TouchableOpacity style={styles.expandButton} onPress={() => setSidebarVisible(true)}>\r\n              <MaterialIcons name=\"chevron-right\" size={30} color=\"#CCB6F4\" />\r\n            </TouchableOpacity>\r\n          )}\r\n          <View style={[styles.content, !sidebarVisible && styles.contentExpanded]}>\r\n            {renderContent()}\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  safeArea: {\r\n    flex: 1,\r\n    backgroundColor: '#000000',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  topBar: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: '#000000',\r\n    borderBottomColor: '#CCB6F4',\r\n    borderBottomWidth: 1,\r\n    padding: 10,\r\n    justifyContent: 'space-between',\r\n  },\r\n  backButtonContainer: {\r\n    flex: 1,\r\n    justifyContent: 'flex-end',\r\n    paddingBottom: 20\r\n  },\r\n  backButton: {\r\n    fontSize: 16,\r\n    color: '#CCB6F4',\r\n    paddingLeft: 15,\r\n    paddingTop: 15,\r\n  },\r\n  semesterNameContainer: {\r\n    flex: 2,\r\n    alignItems: 'center',\r\n  },\r\n  semesterName: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#ffffff',\r\n    fontFamily: 'DuneRise',\r\n    marginTop: 15,\r\n    marginBottom: 15\r\n  },\r\n  mainContent: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  sidebar: {\r\n    width: 175,\r\n    backgroundColor: '#000000',\r\n    borderRightWidth: 1,\r\n    borderRightColor: '#CCB6F4',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  sidebarContent: {\r\n    flex: 1,\r\n    justifyContent: 'space-between',\r\n  },\r\n  collapseButton: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 5,\r\n  },\r\n  expandButton: {\r\n    backgroundColor: '#000000',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n  },\r\n  tab: {\r\n    padding: 15,\r\n  },\r\n  tabText: {\r\n    fontSize: 16,\r\n    color: '#ffffff',\r\n  },\r\n  activeTabText: {\r\n    fontWeight: 'bold',\r\n    color: '#CCB6F4',\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  contentExpanded: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, Modal, TextInput, FlatList, StyleSheet, ImageBackground } from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\n\r\nconst Landing = ({ onSelectSemester }) => {\r\n  const [semesters, setSemesters] = useState([]);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [newSemesterName, setNewSemesterName] = useState('');\r\n  const [editing, setEditing] = useState(false);\r\n  const [editModalVisible, setEditModalVisible] = useState(false);\r\n  const [editSemesterId, setEditSemesterId] = useState(null);\r\n  const [editSemesterName, setEditSemesterName] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadSemesters();\r\n  }, []);\r\n\r\n  const loadSemesters = async () => {\r\n    try {\r\n      const jsonValue = await AsyncStorage.getItem('semesters');\r\n      if (jsonValue != null) {\r\n        setSemesters(JSON.parse(jsonValue));\r\n      }\r\n    } catch (e) {\r\n      console.error('Failed to load semesters.', e);\r\n    }\r\n  };\r\n\r\n  const saveSemesters = async (newSemesters) => {\r\n    try {\r\n      const jsonValue = JSON.stringify(newSemesters);\r\n      await AsyncStorage.setItem('semesters', jsonValue);\r\n      setSemesters(newSemesters);\r\n    } catch (e) {\r\n      console.error('Failed to save semesters.', e);\r\n    }\r\n  };\r\n\r\n  const addSemester = () => {\r\n    if (newSemesterName.trim().length > 0) {\r\n      const newSemesters = [...semesters, { name: newSemesterName, id: Date.now().toString() }];\r\n      setNewSemesterName('');\r\n      setModalVisible(false);\r\n      saveSemesters(newSemesters);\r\n    }\r\n  };\r\n\r\n  const deleteSemester = (id) => {\r\n    const newSemesters = semesters.filter(semester => semester.id !== id);\r\n    saveSemesters(newSemesters);\r\n  };\r\n\r\n  const updateSemesterName = () => {\r\n    const newSemesters = semesters.map(semester =>\r\n      semester.id === editSemesterId ? { ...semester, name: editSemesterName } : semester\r\n    );\r\n    saveSemesters(newSemesters);\r\n    setEditModalVisible(false);\r\n    setEditSemesterId(null);\r\n    setEditSemesterName('');\r\n  };\r\n\r\n  const renderSemesterItem = ({ item }) => (\r\n    <View style={styles.semesterItemContainer}>\r\n      <TouchableOpacity style={styles.semesterItem} onPress={() => onSelectSemester(item)}>\r\n        <Text style={styles.semesterText}>{item.name}</Text>\r\n      </TouchableOpacity>\r\n      {editing && (\r\n        <View style={styles.iconContainer}>\r\n          <TouchableOpacity onPress={() => { setEditSemesterId(item.id); setEditSemesterName(item.name); setEditModalVisible(true); }}>\r\n            <MaterialIcons name=\"edit\" size={24} color=\"#CCB6F4\" />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity onPress={() => deleteSemester(item.id)}>\r\n            <MaterialIcons name=\"delete\" size={24} color=\"#CCB6F4\" />\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require('../assets/images/background.jpg')}\r\n      style={styles.backgroundImage}\r\n      imageStyle={{ resizeMode: 'cover' }}\r\n    >\r\n      <View style={styles.overlay}>\r\n        <View style={styles.container}>\r\n          <View style={styles.titleContainer}>\r\n            <Text style={styles.title}>N e u r o</Text>\r\n          </View>\r\n          <View style={styles.semestersContainer}>\r\n            <FlatList\r\n              data={semesters}\r\n              renderItem={renderSemesterItem}\r\n              keyExtractor={(item) => item.id}\r\n              showsVerticalScrollIndicator={false}\r\n            />\r\n          </View>\r\n          {!editing && (\r\n            <TouchableOpacity\r\n              style={styles.addButton}\r\n              onPress={() => setModalVisible(true)}\r\n            >\r\n              <MaterialIcons name=\"add\" size={30} color=\"#4b0082\" />\r\n            </TouchableOpacity>\r\n          )}\r\n          <TouchableOpacity\r\n            style={styles.editButton}\r\n            onPress={() => setEditing(!editing)}\r\n          >\r\n            <MaterialIcons name={editing ? \"close\" : \"edit\"} size={30} color=\"#4b0082\" />\r\n          </TouchableOpacity>\r\n          <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={() => setModalVisible(false)}\r\n          >\r\n            <View style={styles.modalContainer}>\r\n              <View style={styles.modalContent}>\r\n                <TextInput\r\n                  placeholder=\"Enter semester name\"\r\n                  value={newSemesterName}\r\n                  onChangeText={setNewSemesterName}\r\n                  style={styles.input}\r\n                />\r\n                <TouchableOpacity\r\n                  style={styles.modalButton}\r\n                  onPress={addSemester}\r\n                >\r\n                  <Text style={styles.modalButtonText}>Create Semester</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={styles.modalButton}\r\n                  onPress={() => setModalVisible(false)}\r\n                >\r\n                  <Text style={styles.modalButtonText}>Close</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n          <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={editModalVisible}\r\n            onRequestClose={() => setEditModalVisible(false)}\r\n          >\r\n            <View style={styles.modalContainer}>\r\n              <View style={styles.modalContent}>\r\n                <TextInput\r\n                  placeholder=\"Edit semester name\"\r\n                  value={editSemesterName}\r\n                  onChangeText={setEditSemesterName}\r\n                  style={styles.input}\r\n                />\r\n                <TouchableOpacity\r\n                  style={styles.modalButton}\r\n                  onPress={updateSemesterName}\r\n                >\r\n                  <Text style={styles.modalButtonText}>Save Changes</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity\r\n                  style={styles.modalButton}\r\n                  onPress={() => setEditModalVisible(false)}\r\n                >\r\n                  <Text style={styles.modalButtonText}>Close</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </Modal>\r\n        </View>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  backgroundImage: {\r\n    flex: 1,\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.5)'\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    paddingTop: 60,\r\n    alignItems: 'center',\r\n  },\r\n  titleContainer: {\r\n    marginBottom: 80,\r\n  },\r\n  title: {\r\n    fontSize: 54,\r\n    color: 'white',\r\n    fontFamily: 'DuneRise'\r\n  },\r\n  semestersContainer: {\r\n    flex: 1,\r\n    width: '80%',\r\n  },\r\n  semesterItemContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 20,\r\n    width: '60%'\r\n  },\r\n  semesterItem: {\r\n    flex: 1,\r\n    padding: 15,\r\n    borderBottomWidth: 3,\r\n    borderBottomColor: '#4b0082',\r\n    backgroundColor: '#CCB6F4',\r\n    borderRadius: 10,\r\n    marginRight: 10\r\n  },\r\n  semesterText: {\r\n    fontSize: 18,\r\n    textAlign: 'center',\r\n    color: '#4b0082',\r\n    fontWeight: 'bold'\r\n  },\r\n  iconContainer: {\r\n    flexDirection: 'row',\r\n  },\r\n  addButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    right: 20,\r\n    backgroundColor: '#CCB6F4',\r\n    padding: 10,\r\n    borderRadius: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  editButton: {\r\n    position: 'absolute',\r\n    bottom: 20,\r\n    left: 20,\r\n    backgroundColor: '#CCB6F4',\r\n    padding: 10,\r\n    borderRadius: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n  },\r\n  modalContent: {\r\n    width: 300,\r\n    padding: 20,\r\n    backgroundColor: '#fff',\r\n    borderRadius: 10,\r\n  },\r\n  input: {\r\n    height: 40,\r\n    borderColor: '#ddd',\r\n    borderWidth: 1,\r\n    marginBottom: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  modalButton: {\r\n    backgroundColor: '#CCB6F4',\r\n    padding: 10,\r\n    borderRadius: 5,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  modalButtonText: {\r\n    color: '#4b0082',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default Landing;\r\n","import React, { useState } from 'react';\nimport { View, StatusBar, StyleSheet } from 'react-native';\nimport * as Font from 'expo-font';\nimport AppLoading from 'expo-app-loading';\nimport Dashboard from './screens/Dashboard';\nimport Landing from './screens/Landing';\n\nconst loadFonts = () => {\n  return Font.loadAsync({\n    'DuneRise': require('./assets/fonts/Dune_Rise.ttf'),\n  });\n};\n\nexport default function App() {\n  const [fontsLoaded, setFontsLoaded] = useState(false);\n  const [activeSemester, setActiveSemester] = useState(null);\n\n  const handleSelectSemester = (semester) => {\n    setActiveSemester(semester);\n  };\n\n  const handleBack = () => {\n    setActiveSemester(null);\n  };\n\n  if (!fontsLoaded) {\n    return (\n      <AppLoading\n        startAsync={loadFonts}\n        onFinish={() => setFontsLoaded(true)}\n        onError={(err) => console.log(err)}\n      />\n    );\n  }\n\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      {activeSemester === null ? (\n        <Landing onSelectSemester={handleSelectSemester} />\n      ) : (\n        <Dashboard semesterId={activeSemester.id} semesterName={activeSemester.name} onBack={handleBack} />\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/collegeDashboard/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [703], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["styles","StyleSheet","create","item","backgroundColor","padding","borderRadius","flexDirection","alignItems","justifyContent","marginBottom","marginRight","itemLeft","flexWrap","square","width","height","borderWidth","borderColor","squareCompleted","itemText","maxWidth","color","fontSize","fontWeight","itemRight","button","props","_jsxs","View","style","children","_jsx","TouchableOpacity","completed","onPress","onComplete","Text","text","onEdit","onDelete","modalContainer","flex","modalContent","title","textAlign","input","paddingHorizontal","colorPickerContainer","marginVertical","colorButton","colorButtonText","selectedColor","colorPickerLabel","colorPicker","buttonContainer","marginTop","buttonSpacing","actionButton","marginHorizontal","marginLeft","buttonText","colorModalContainer","colorModalContent","colorModalTitle","textDecorationColor","colorOptions","colorOptionContainer","margin","colorOption","colorLabel","closeButton","closeButtonText","AssignmentForm","visible","onClose","onAdd","editItem","assignmentName","setAssignmentName","useState","className","setClassName","dueDate","setDueDate","setColor","colorPickerVisible","setColorPickerVisible","numberOfAssignments","setNumberOfAssignments","useEffect","resetForm","Modal","animationType","transparent","onRequestClose","TextInput","placeholder","value","onChangeText","handleAdd","assignments","numberOfAssignmentsToCreate","parseInt","i","push","label","map","index","screenWidth","Dimensions","get","container","mainTitle","header","progressBarContainer","progressBar","progressText","filterButton","addButton","noAssignmentsText","modalTitle","AssignmentList","completedAssignments","onAddAssignment","onCompleteAssignment","taskItems","setTaskItems","completedItems","setCompletedItems","modalVisible","setModalVisible","filterModalVisible","setFilterModalVisible","sortBy","setSortBy","setEditItem","progress","setProgress","loadSortMethod","updateProgress","saveAssignmentsToStorage","async","AsyncStorage","setItem","JSON","stringify","error","console","toggleAssignment","listType","itemsCopy","completedItem","splice","taskItem","deleteAssignment","editAssignment","sortMethod","getItem","Alert","alert","saveSortMethod","method","applySortMethod","sortedTasks","sortAssignments","sortedCompletedTasks","items","sort","a","b","Date","localeCompare","totalAssignments","length","completedCount","sections","data","renderItem","renderAssignment","Assignment","renderCompletedAssignment","PaperProvider","Button","icon","mode","buttonColor","labelStyle","Progress","toFixed","SectionList","keyExtractor","section","renderSectionHeader","newAssignments","updatedItems","forEach","assignment","Portal","onDismiss","contentContainerStyle","textColor","contentContainer","leftPane","paddingRight","rightPane","paddingLeft","paddingTop","categoryContainer","gradeCalculationContainer","titleContainer","title2","classContainer","classButton","classButtonText","addButtonText","editButton","editButtonText","editButtonText2","deleteButton","deleteButtonText","deleteButtonText2","addClassButton","borderBottomColor","borderBottomWidth","addClassButtonText","backButton","pickerContainer","overflow","picker","modalView","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","assignmentContainer","assignmentTextContainer","assignmentText","assignmentCategory","gradeTableContainer","tableTitle","gradeTable","gradeText","tableRow","tableCell","finalGradeRow","borderTopWidth","borderTopColor","finalGradeText","categoryText","currentCategories","categoryItemContainer","categoryTextContainer","GradeCalculator","classes","setClasses","selectedClass","setSelectedClass","assignmentModalVisible","setAssignmentModalVisible","grade","setGrade","category","setCategory","categoryModalVisible","setCategoryModalVisible","newCategoryName","setNewCategoryName","newCategoryWeight","setNewCategoryWeight","editMode","setEditMode","editAssignmentMode","setEditAssignmentMode","editCategoryMode","setEditCategoryMode","assignmentToEdit","setAssignmentToEdit","categoryToEdit","setCategoryToEdit","screen","setScreen","calculatedGrades","setCalculatedGrades","loadClasses","saveClasses","updatedClasses","e","classesString","parse","saveClassData","openModal","closeModal","handleClassClick","classData","classDataString","_objectSpread","calculateGrades","categories","loadClassData","classInfo","currentClass","grades","cat","categoryAssignments","filter","name","totalGrades","reduce","total","averageGrade","weight","finalGrade","parseFloat","_Fragment","FlatList","MaterialIcons","size","classNameToDelete","newClasses","removeItem","handleDeleteClass","handleBackToClassList","toString","openEditAssignmentModal","assignmentToDelete","updatedAssignments","updatedClass","handleDeleteAssignment","placeholderTextColor","handleEditClass","updatedClassData","handleAddClass","keyboardType","Picker","selectedValue","onValueChange","itemValue","Item","handleEditAssignment","handleAddAssignment","handleEditCategory","updatedCategories","handleAddCategory","openEditCategoryModal","categoryToDelete","handleDeleteCategory","pane","headerText","class","classText","Home","setAssignments","classesWithGrades","setClassesWithGrades","storedAssignments","loadAssignments","loadedClasses","loadClassesWithGrades","assignmentsInCategory","acc","assignmentsDueIn7Days","today","nextWeek","setDate","getDate","getAssignmentsDueIn7Days","ScrollView","safeArea","topBar","backButtonContainer","paddingBottom","semesterNameContainer","semesterName","fontFamily","mainContent","sidebar","borderRightWidth","borderRightColor","sidebarContent","collapseButton","expandButton","tab","tabText","activeTabText","content","contentExpanded","Dashboard","semesterId","onBack","activeTab","setActiveTab","setCompletedAssignments","sidebarVisible","setSidebarVisible","saveAssignments","newCompletedAssignments","SafeAreaView","renderContent","StudyTimer","backgroundImage","overlay","semestersContainer","semesterItemContainer","semesterItem","semesterText","iconContainer","position","bottom","right","left","modalButton","modalButtonText","Landing","onSelectSemester","semesters","setSemesters","newSemesterName","setNewSemesterName","editing","setEditing","editModalVisible","setEditModalVisible","editSemesterId","setEditSemesterId","editSemesterName","setEditSemesterName","loadSemesters","jsonValue","saveSemesters","newSemesters","ImageBackground","source","require","imageStyle","resizeMode","renderSemesterItem","id","semester","deleteSemester","showsVerticalScrollIndicator","addSemester","trim","now","updateSemesterName","loadFonts","Font","loadAsync","App","fontsLoaded","setFontsLoaded","activeSemester","setActiveSemester","StatusBar","handleBack","AppLoading","startAsync","onFinish","onError","err","log","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}